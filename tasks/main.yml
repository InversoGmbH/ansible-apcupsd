---
# tasks file for apcupsd

- name: Include the OS specific variables
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
        - defaults.yml
      skip: true
  tags: ['always']

- name: Check role availability
  fail:
    msg: 'This module only works on Debian or derivatives like Ubuntu and with Systemd'
  when: ansible_os_family != 'Debian'
    or ansible_service_mgr != 'systemd'
  tags: ['always']

- name: Importing initialization tasks
  import_tasks: init.yml
  tags: ['always']

- name: Importing install tasks
  import_tasks: install.yml
  tags: ['apcupsd', 'apcupsd-install']

- name: Importing configuration tasks
  import_tasks: configure.yml
  tags: ['apcupsd', 'apcupsd-configure']

- name: Importing service tasks
  import_tasks: service.yml
  tags: ['apcupsd', 'apcupsd-service']

- name: Configure apcupsd instances
  include_tasks: types/instance.yml
  vars:
    apcupsd__instance: "{{
        apcupsd__instance_defaults
        |combine({'net_server_port': apcupsd__instance_defaults['net_server_port'] + outer_index|int})
        |combine(outer_item.1)
        |combine({'name': outer_item.0}) }}"
  loop: '{{ apcupsd__instances|dictsort }}'
  loop_control:
    loop_var: outer_item
    index_var: outer_index
  tags: ['apcupsd', 'apcupsd-configure']

- name: Optionally including monitoring tasks
  include_tasks: 'monitoring/{{ monitoring_backend }}.yml'
  loop: '{{ [apcupsd__monitoring]|flatten|unique|list }}'
  when: apcupsd__monitoring is defined
  loop_control:
    loop_var: monitoring_backend
  tags: ['apcupsd', 'apcupsd-monitoring']

- name: Optionally including facts tasks
  include_tasks: facts.yml
  when: apcupsd__facts|bool
  tags: ['apcupsd', 'apcupsd-facts']
